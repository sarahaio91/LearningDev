<?xml version="1.0" encoding="utf-8"?>
<local:SequentialNumberGuessWorkflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:local="clr-namespace:NumberGuessWorkflowActivities;assembly=NumberGuessWorkflowActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NumberGuessWorkflowActivities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:SequentialNumberGuessWorkflow.Implementation>
    <Sequence>
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="Guess" />
        <Variable x:TypeArguments="x:Int32" Name="Target" />
      </Sequence.Variables>
      <Assign>
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">
            <mca:CSharpReference x:TypeArguments="x:Int32">Target</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">new System.Random().Next(1, MaxNumber+1)</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <DoWhile>
        <DoWhile.Condition>
          <mca:CSharpValue x:TypeArguments="x:Boolean">Guess != Target</mca:CSharpValue>
        </DoWhile.Condition>
        <Sequence>
          <local:Prompt BookmarkName="EnterGuess">
            <local:Prompt.Result>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">Guess</mca:CSharpReference>
              </OutArgument>
            </local:Prompt.Result>
            <local:Prompt.Text>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Please enter a number between 1 and " + MaxNumber</mca:CSharpValue>
              </InArgument>
            </local:Prompt.Text>
          </local:Prompt>
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">Turns</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">Turns + 1</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <If>
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">Guess != Target</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <If>
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Guess &lt; Target</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <WriteLine>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">Guess + " is too low"</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                </If.Then>
                <If.Else>
                  <WriteLine>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">Guess + " is too high"</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                </If.Else>
              </If>
            </If.Then>
            <If.Else>
              <WriteLine>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">Guess + " is correct. You guessed it in " + Turns</mca:CSharpValue>
                </InArgument>
              </WriteLine>
            </If.Else>
          </If>
        </Sequence>
      </DoWhile>
      <sads:DebugSymbol.Symbol>d4ABQzpcVXNlcnNcdHJ1b25nLmxlXERlc2t0b3BcV29ya3NwYWNlXFdGNDVHZXR0aW5nU3RhcnRlZFR1dG9yaWFsXE51bWJlckd1ZXNzV29ya2Zsb3dBY3Rpdml0aWVzXFNlcXVlbnRpYWxOdW1iZXJHdWVzc1dvcmtmbG93LnhhbWwYLAOCAQ4CAQExBTwOAgE+PQWAAQ8CAQI5CzlwAgFENAs0VgIBPz8JP1cCATlBB38SAgEDQglNGAIBLU4JWRICASJaCX4OAgEEQiRCMAIBOEoPSn8CATNFD0VZAgEuVg9WVQIBKFEPUVkCASNdD11dAgEFYQ11EgIBEHgNfBkCAQpkE2RjAgERaBFsHQIBHG8Rcx0CARZ6EXqAAQIBC2oVamgCAR1xFXFpAgEX</sads:DebugSymbol.Symbol>
    </Sequence>
  </local:SequentialNumberGuessWorkflow.Implementation>
</local:SequentialNumberGuessWorkflow>